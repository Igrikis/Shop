/**
 * This class is generated by jOOQ
 */
package com.shop.model.tables;


import com.shop.model.Keys;
import com.shop.model.Shop;
import com.shop.model.tables.records.RoleRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Role extends TableImpl<RoleRecord> {

	private static final long serialVersionUID = 66990335;

	/**
	 * The reference instance of <code>shop.role</code>
	 */
	public static final Role ROLE = new Role();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RoleRecord> getRecordType() {
		return RoleRecord.class;
	}

	/**
	 * The column <code>shop.role.id</code>.
	 */
	public final TableField<RoleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>shop.role.name</code>.
	 */
	public final TableField<RoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>shop.role.description</code>.
	 */
	public final TableField<RoleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * Create a <code>shop.role</code> table reference
	 */
	public Role() {
		this("role", null);
	}

	/**
	 * Create an aliased <code>shop.role</code> table reference
	 */
	public Role(String alias) {
		this(alias, ROLE);
	}

	private Role(String alias, Table<RoleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Role(String alias, Table<RoleRecord> aliased, Field<?>[] parameters) {
		super(alias, Shop.SHOP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RoleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ROLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RoleRecord> getPrimaryKey() {
		return Keys.KEY_ROLE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RoleRecord>> getKeys() {
		return Arrays.<UniqueKey<RoleRecord>>asList(Keys.KEY_ROLE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Role as(String alias) {
		return new Role(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Role rename(String name) {
		return new Role(name, null);
	}
}
